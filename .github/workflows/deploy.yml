name: Push
on: push
env:
  branchname: ${{ github.ref_name }}
  docker_image: ghcr.io/navikt/dinesykmeldte:${{ github.sha }}
  NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
jobs:
  snyk-monitor:
    if: false
    name: monitor dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          args: --org=teamsykmelding --severity-threshold=high
  snyk-test:
    name: analyze dependencies
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: --org=teamsykmelding --severity-threshold=high
  build:
    name: build and push docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install yarn dependencies
        run: yarn --immutable
      - name: Lint
        if: false
        run: yarn lint
      - name: Test
        if: false
        run: yarn test
      - name: Build app
        run: yarn build
        env:
          ENABLE_SENTRY: true
          SENTRY_URL: https://sentry.gc.nav.no/
          SENTRY_ORG: nav
          SENTRY_PROJECT: dinesykmeldte
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      - name: Login GCP dev
        if: false
        uses: google-github-actions/auth@v0.7.1
        with:
          credentials_json: ${{ secrets.STATIC_FILES_DEV }}
      - name: Upload static files to GCP bucket
        if: false
        uses: google-github-actions/upload-cloud-storage@v0.10.1
        with:
          path: .next/static
          parent: false
          destination: teamsykmelding-static-files-dev/dinesykmeldte/_next/static
      - name: Login GCP prod
        if: false
        uses: google-github-actions/auth@v0.7.1
        with:
          credentials_json: ${{ secrets.STATIC_FILES_PROD }}
      - name: Upload static files to GCP prod bucket
        if: false
        uses: google-github-actions/upload-cloud-storage@v0.10.1
        with:
          path: .next/static
          parent: false
          destination: teamsykmelding-static-files-prod/dinesykmeldte/_next/static
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and publish Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.docker_image }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            "NPM_AUTH_TOKEN=${{ secrets.READER_TOKEN }}"

  deploy-to-dev-gcp:
    if: false
    name: deploy to nais dev
    needs: [snyk-test, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais-dev-gcp.yaml
          VAR: image=${{ env.docker_image }},version=${{ github.sha }}

  deploy-to-labs-gcp:
    if: false
    name: deploy to nais demo
    needs: [snyk-test, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: labs-gcp
          RESOURCE: nais-labs-gcp.yaml
          VAR: image=${{ env.docker_image }}

  deploy:
    if: false
    name: deploy to nais
    needs: [snyk-test, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais-prod-gcp.yaml
          VAR: image=${{ env.docker_image }},version=${{ github.sha }}

  deploy-to-load-test:
    name: deploy to prod load test app
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais-prod-load-test-gcp.yaml
          VAR: image=${{ env.docker_image }}
